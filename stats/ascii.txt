0x09 : 1.27 : TAB : __plusOne(WHITE);
0x0A : 0.00 : LF : __plusOne(WHITE);
0x0B : 0.00 : VTAB : __plusOne(WHITE);
0x0C : 0.00 : FF : __plusOne(WHITE);
0x0D : 3.47 : CR : __parseCR();
0x2028 : 0.00 : PS : this.lastNewline = true; this.__plusOne(WHITE);
0x2029 : 0.00 : LS : this.lastNewline = true; this.__plusOne(WHITE);
0x20 : 20.50 : SPACE : __plusOne(WHITE);
0x21 : 0.22 : EXCL : __parseEqualSigns();
0x22 : 0.84 : DQUOTE : __parseDoubleString();
0x24 : 0.09 : $ : __parseIdentifier();
0x25 : 0.00 : PERCENT : __parseCompound();
0x26 : 0.18 : AND : __parseSameOrCompound(c);
0x27 : 0.14 : SQUOTE : __parseSingleString();
0x28 : 3.14 : OPEN_PAREN : __plusOne(PUNCTUATOR);
0x29 : 3.14 : CLOSE_PAREN : __plusOne(PUNCTUATOR);
0x2a : 0.13 : STAR : __parseCompound();
0x2b : 0.41 : PLUS : __parseSameOrCompound(c);
0x2c : 2.19 : COMMA : __plusOne(PUNCTUATOR);
0x2d : 0.15 : MIN : __parseSameOrCompound(c);
0x2e : 4.45 : DOT : __parseDot();
0x2f : 0.28 : FWDSLASH : __parseFwdSlash(expressionStart);
0x30 : 0.35 : L_0 : __parseZero();
0x31 : 0.28 : L_1 : __parseNumber(); number=0.57
0x32 : 0.10 : L_2 : __parseNumber();
0x33 : 0.06 : L_3 : __parseNumber();
0x34 : 0.04 : L_4 : __parseNumber();
0x35 : 0.02 : L_5 : __parseNumber();
0x36 : 0.02 : L_6 : __parseNumber();
0x37 : 0.02 : L_7 : __parseNumber();
0x38 : 0.02 : L_8 : __parseNumber();
0x39 : 0.01 : L_9 : __parseNumber();
0x3a : 0.71 : COLON : __plusOne(PUNCTUATOR);
0x3b : 2.51 : SEMI : __plusOne(PUNCTUATOR);
0x3c : 0.10 : LT : __parseLtgtPunctuator(c);
0x3d : 2.11 : IS : __parseEqualSigns();
0x3e : 0.06 : GT : __parseLtgtPunctuator(c);
0x3f : 0.10 : QMARK : __plusOne(PUNCTUATOR);
0x41 : 0.14 : L_A_UC : __parseIdentifier();
0x42 : 0.08 : L_B_UC : __parseIdentifier();
0x43 : 0.12 : L_C_UC : __parseIdentifier();
0x44 : 0.16 : L_D_UC : __parseIdentifier();
0x45 : 0.19 : L_E_UC : __parseIdentifier();
0x46 : 0.12 : L_F_UC : __parseIdentifier();
0x47 : 0.10 : L_G_UC : __parseIdentifier();
0x48 : 0.06 : L_H_UC : __parseIdentifier();
0x49 : 0.06 : L_I_UC : __parseIdentifier();
0x4A : 0.04 : L_J_UC : __parseIdentifier();
0x4B : 0.03 : L_K_UC : __parseIdentifier();
0x4C : 0.05 : L_L_UC : __parseIdentifier();
0x4D : 0.11 : L_M_UC : __parseIdentifier();
0x4E : 0.05 : L_N_UC : __parseIdentifier();
0x4F : 0.06 : L_O_UC : __parseIdentifier();
0x50 : 0.11 : L_P_UC : __parseIdentifier();
0x51 : 0.03 : L_Q_UC : __parseIdentifier();
0x52 : 0.06 : L_R_UC : __parseIdentifier();
0x53 : 0.12 : L_S_UC : __parseIdentifier();
0x54 : 0.13 : L_T_UC : __parseIdentifier();
0x55 : 0.03 : L_U_UC : __parseIdentifier();
0x56 : 0.04 : L_V_UC : __parseIdentifier();
0x57 : 0.03 : L_W_UC : __parseIdentifier();
0x58 : 0.03 : L_X_UC : __parseIdentifier();
0x59 : 0.04 : L_Y_UC : __parseIdentifier();
0x5a : 0.19 : L_Z_UC : __parseIdentifier();
0x5b : 0.72 : OPEN_SQUARE : __plusOne(PUNCTUATOR);
0x5c : 0.00 : BACKSLASH : special
0x5d : 0.72 : CLOSE_SQUARE : __plusOne(PUNCTUATOR);
0x5e : 0.00 : XOR : __parseCompound();
0x5f : 0.47 : LODASH : __parseIdentifier();
0x61 : 0.93 : L_A : __parseIdentifier();
0x62 : 0.66 : L_B : __parseIdentifier();
0x63 : 0.91 : L_C : __parseIdentifier();
0x64 : 0.55 : L_D : __parseIdentifier();
0x65 : 0.63 : L_E : __parseIdentifier();
0x66 : 1.01 : L_F : __parseIdentifier();
0x67 : 0.42 : L_G : __parseIdentifier();
0x68 : 0.23 : L_H : __parseIdentifier();
0x69 : 1.12 : L_I : __parseIdentifier();
0x6A : 0.12 : L_J : __parseIdentifier();
0x6B : 0.12 : L_K : __parseIdentifier();
0x6c : 0.33 : L_L : __parseIdentifier();
0x6d : 0.44 : L_M : __parseIdentifier();
0x6e : 0.59 : L_N : __parseIdentifier();
0x6f : 0.31 : L_O : __parseIdentifier();
0x70 : 0.58 : L_P : __parseIdentifier();
0x71 : 0.06 : L_Q : __parseIdentifier();
0x72 : 0.74 : L_R : __parseIdentifier();
0x73 : 0.68 : L_S : __parseIdentifier();
0x74 : 2.08 : L_T : __parseIdentifier();
0x75 : 0.20 : L_U : __parseIdentifier();
0x76 : 0.73 : L_V : __parseIdentifier();
0x77 : 0.18 : L_W : __parseIdentifier();
0x78 : 0.15 : L_X : __parseIdentifier();
0x79 : 0.13 : L_Y : __parseIdentifier();
0x7a : 0.06 : L_Z : __parseIdentifier();
0x7b : 1.32 : OPEN_CURLY : __plusOne(PUNCTUATOR);
0x7c : 0.15 : OR : __parseSameOrCompound(c);
0x7d : 1.32 : CLOSE_CURLY : __plusOne(PUNCTUATOR);
0x7e : 0.00 : TILDE : __parseCompound();
0xA0 : 0.00 : NBSP : __plusOne(WHITE);
0xFEFF : 0.00 : BOM : __plusOne(WHITE);
